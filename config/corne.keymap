/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&nice_view_spi { cs-gpios = <&pro_micro 9 GPIO_ACTIVE_HIGH>; };

/ {
    macros {
        NH_EVOLUTION: NH_EVOLUTION {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(C) &kp O &kp R &kp R &kp E &kp O &kp SPACE &kp D &kp E &kp SPACE &kp LS(E) &kp V &kp O &kp L &kp U &kp C &kp I &kp O &kp N &kp RET>;
            label = "NH_EVOLUTION";
        };

        NH_APERTURA_CEX02: NH_APERTURA {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(D) &kp E &kp T &kp E &kp C &kp T &kp A &kp M &kp O &kp S &kp SPACE &kp P &kp E &kp R &kp D &kp I &kp D &kp A &kp SPACE &kp D &kp E &kp SPACE &kp C &kp O &kp N &kp E &kp C &kp T &kp I &kp V &kp I &kp D &kp A &kp D &kp SPACE &kp C &kp O &kp N &kp SPACE &kp E &kp L &kp SPACE &kp E &kp Q &kp U &kp I &kp P &kp O &kp SPACE &kp E &kp N &kp SPACE &kp S &kp E &kp D &kp E &kp SPACE &kp V &kp I &kp A &kp SPACE &kp LS(A) &kp LS(S) &kp LS(T) &kp LS(R) &kp LS(O) &kp DOT>;
            label = "NH_APERTURA";
        };

        TELF_PASS: NH_NUMBER {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(K) &kp R &kp N6 &kp A &kp C &kp K &kp E &kp N &kp N2 &kp N0 &kp N2 &kp N4>;
            label = "NH_NUMBER";
        };

        SUGUS_USR: SUGUS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(W) &kp LS(U) &kp LS(E) &kp LS(A) &kp LS(R) &kp LS(O) &kp N6 &kp N5>;
            label = "SUGUS";
        };

        SUGUS_PASS: SUGUS_PASS {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(K) &kp R &kp N4 &kp A &kp C &kp K &kp E &kp N &kp EXCL &kp N1>;
            label = "SUGUS_PASS";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  Ã‘  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  -  | SHFT  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T    &kp Y      &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G    &kp H      &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B    &kp N      &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp RSHFT
                                &kp LGUI  &mo 4  &mo 5    &kp SPACE  &mo 1  &kp LEFT_ALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TILDE  &kp EXCL    &kp AT      &kp HASH    &kp DLLR      &kp PRCNT          &kp CARET  &kp AMPS   &kp ASTRK      &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans      &trans      &trans      &trans        &trans             &kp MINUS  &kp EQUAL  &kp LBKT       &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &bl BL_TOG  &bl BL_INC  &bl BL_DEC  &bl BL_CYCLE  &rgb_ug RGB_TOG    &kp UNDER  &kp PLUS   &kp LBRC       &kp RBRC  &kp PIPE  &mo 2
                                   &kp LGUI    &trans        &kp SPACE          &kp RET    &trans     &kp RIGHT_ALT
            >;
        };

        functions {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6    &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans   &trans   &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_7 {
            bindings = <
&kp ESCAPE  &trans  &trans  &trans  &trans  &trans       &TELF_PASS   &NH_EVOLUTION    &NH_APERTURA_CEX02  &trans         &trans  &trans
&trans      &trans  &trans  &trans  &trans  &kp ENTER    &SUGUS_USR   &kp PRINTSCREEN  &kp HOME            &kp PAGE_UP    &trans  &kp ENTER
&trans      &trans  &trans  &trans  &trans  &trans       &SUGUS_PASS  &kp INSERT       &kp END             &kp PAGE_DOWN  &trans  &kp LEFT_SHIFT
                            &trans  &trans  &trans       &kp SPACE    &trans           &trans
            >;
        };

        layer_3 {
            bindings = <
&kp ESCAPE  &kp C_MUTE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &trans             &trans             &trans     &trans  &trans                &kp QUESTION           &trans  &trans
&kp TAB     &trans      &trans             &trans           &kp RIGHT_ALT      &kp ENTER          &trans     &trans  &kp RA(LEFT_BRACKET)  &kp RA(RIGHT_BRACKET)  &trans  &kp ENTER
&trans      &trans      &trans             &trans           &ext_power EP_TOG  &rgb_ug RGB_TOG    &trans     &trans  &kp RA(SQT)           &kp RA(BSLH)           &trans  &kp LEFT_SHIFT
                                           &trans           &trans             &trans             &kp SPACE  &mo 3   &trans
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp ESCAPE  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6    &kp N7    &kp N8    &kp N9     &kp N0  &kp DELETE
&kp CAPS    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp LEFT  &kp DOWN  &kp UP    &kp RIGHT  &trans  &kp ENTER
&kp LSHFT   &kp NUBS      &trans        &trans        &bt BT_CLR    &out OUT_TOG    &trans    &trans    &trans    &trans     &trans  &tog 6
                                        &kp LGUI      &trans        &trans          &kp RET   &trans    &kp RALT
            >;
        };

        numbers {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans    &kp ASTERISK   &kp N7           &kp N8  &kp N9  &kp MINUS  &trans
&trans  &trans  &trans     &trans     &trans     &trans    &kp KP_DIVIDE  &kp N4           &kp N5  &kp N6  &kp RBKT   &trans
&trans  &trans  &kp LC(X)  &kp LC(C)  &kp LC(V)  &trans    &kp KP_EQUAL   &kp NUMBER_1     &kp N2  &kp N3  &trans     &trans
                           &trans     &trans     &trans    &kp SPACE      &kp KP_NUMBER_0  &tog 6
            >;
        };
    };
};
